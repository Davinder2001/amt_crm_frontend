name: Build and Deploy - AMT CRM Frontend

on:
  push:
    branches: [ production, main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npx tsc --noEmit

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_API_BASE_URL: ${{ secrets.NEXT_PUBLIC_API_BASE_URL }}

      - name: Create environment files from secrets
        run: |
          cat > env << EOF
          NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }}
          EOF
          cat > env.docker << EOF
          NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }}
          EOF

      - name: Build Docker image
        run: docker build -t amt-crm-frontend .

      - name: Create deployment package
        run: |
          mkdir -p deployment
          cp -r src deployment/
          cp -r public deployment/
          cp -r infra deployment/
          cp -r docker deployment/
          cp package.json deployment/
          cp package-lock.json deployment/
          cp Dockerfile deployment/
          cp docker-compose.yml deployment/
          cp next.config.ts deployment/
          cp tsconfig.json deployment/
          cp .dockerignore deployment/
          cp README-PRODUCTION.md deployment/
          cp env deployment/
          cp env.docker deployment/
          cp deploy.sh deployment/
          tar -czf deployment.tar.gz -C deployment .

      - name: Copy files to server via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          port: ${{ secrets.PROD_PORT || 22 }}
          source: "deployment.tar.gz"
          target: "/srv/amt-crm-frontend"
          overwrite: true

      - name: Deploy with SSH and Docker Compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          port: ${{ secrets.PROD_PORT || 22 }}
          script: |
            cd /srv/amt-crm-frontend
            tar -xzf deployment.tar.gz
            docker compose down --remove-orphans || true
            docker compose up --build -d --quiet-pull
            sleep 30
            if ! docker compose ps frontend | grep -q "Up"; then
              echo "❌ Frontend container is not running. Checking logs..."
              docker compose logs frontend
              exit 1
            fi
            echo "✅ Deployment completed successfully!"
            echo "🌐 Your application is available at: https://himmanav.com" 